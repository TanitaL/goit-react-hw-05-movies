{"version":3,"file":"static/js/881.24164ce1.chunk.js","mappings":"kMACA,EAA8B,+BAA9B,EAAqE,yB,SC6CrE,EAxCmB,SAAC,GAAgC,IAA9BA,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,OAC5BC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,2BACKH,IACG,iCACA,eAAII,UAAWC,EAAf,6BACI,wBACKL,EAAeM,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OAAmB,eAAaJ,UAAWC,EAAxB,UACnC,SAAC,KAAD,CACII,GAAE,kBAAaD,GACfE,MAAO,CAAEC,KAAMT,GAFnB,SAIKK,KALuCC,EAA5B,SAY/BP,IACG,+BACI,wBACKA,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OAAmB,eAAaJ,UAAWC,EAAxB,UAC3B,SAAC,KAAD,CACII,GAAE,kBAAaD,GACfE,MAAO,CAAEC,KAAMT,GAFnB,SAIKK,KAL+BC,EAA5B,UAcnC,C,0HC3CD,EAAuB,qBAAvB,EAAoD,sBAApD,EAAmF,uBAAnF,EAAqH,yB,SCqErH,EA9De,WAAO,IAAD,EACnB,GAAwCI,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAE3C,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOhB,EAAP,KAAeiB,EAAf,KACA,GAAsCD,EAAAA,EAAAA,UAAS,MAA/C,eAAOE,EAAP,KAAoBC,EAApB,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KACA,GAAsCL,EAAAA,EAAAA,UAASF,GAA/C,eAAOQ,EAAP,KAAoBC,EAApB,MAGAC,EAAAA,EAAAA,YAAU,WACM,KAAVV,IAEJG,EAAU,MACVE,EAAe,MACfE,GAAa,IAEbI,EAAAA,EAAAA,IAAkBX,GACjBY,MAAK,SAAAC,GACJV,EAAUU,EAAKC,SACfT,EAAeQ,EAAKE,eACpBR,GAAa,EACd,IACAS,MAAMC,QAAQC,KAChB,GAAE,CAAClB,IAeJ,OACE,iCACE,kBAAMmB,SAXe,SAAAC,GACvBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,OACXC,EAAkBF,EAAKtB,MAAMyB,MAAMC,cAAcC,OAEvD5B,EAAgB,CAAEC,MAAOwB,IACzBF,EAAKM,OACN,EAIqCvC,UAAWC,EAA7C,WACE,kBACEuC,KAAK,OACLC,KAAK,QACLzC,UAAWC,EACXyC,SApBkB,SAAAX,GACxBX,EAAeW,EAAIY,cAAcP,MAClC,EAmBOA,MAAOjB,KAGT,mBAAQqB,KAAK,SAASxC,UAAWC,EAAjC,uBAKDgB,IAAa,SAAC2B,EAAA,EAAD,IACb/C,IAAU,SAACgD,EAAA,EAAD,CAAYhD,OAAQA,IACd,IAAhBkB,IAAqB,gBAAKf,UAAWC,EAAhB,gCAG3B,C","sources":["webpack://react-homework-template/./src/components/MoviesList/MovieList.module.css?dfe6","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"trendsTitle\":\"MovieList_trendsTitle__-sDWG\",\"movie\":\"MovieList_movie__UDuUl\"};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from \"./MovieList.module.css\";\n\n\nconst MoviesList = ({ trendingMovies, movies }) => {\n    const location = useLocation();\n\n    return (\n        <div>\n            {trendingMovies &&\n                <>\n                <h2 className={css.trendsTitle}>Trending today</h2>\n                    <ul>\n                        {trendingMovies.map(({ title, id }) => <li key={id} className={css.movie}>\n                            <Link\n                                to={`/movies/${id}`}\n                                state={{ from: location }}\n                            >\n                                {title}\n                            </Link>\n                        </li>)\n                        }\n                    </ul>\n                </>\n            }\n            {movies &&\n                <>\n                    <ul>\n                        {movies.map(({ title, id }) => <li key={id} className={css.movie}>\n                            <Link\n                                to={`/movies/${id}`}\n                                state={{ from: location }}\n                            >\n                                {title}\n                            </Link>\n                        </li>)\n                        }\n                    </ul>\n                </>\n            }\n        </div>\n    )\n}\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  trendingMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    }).isRequired\n    ),\n    movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    }).isRequired\n  )\n};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__4ow+Z\",\"input\":\"Movies_input__KrUqs\",\"submit\":\"Movies_submit__Nxgt8\",\"noMovies\":\"Movies_noMovies__VWe5H\"};","import { React, useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesBySearch } from 'components/services/fetchMoviesApi';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loading from 'components/Loading/Loading';\nimport css from \"./Movies.module.css\";\n\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const [movies, setMovies] = useState(null);\n  const [totalMovies, setTotalMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [inputSearch, setInputSearch] = useState(query);\n\n\n  useEffect(() => {\n    if (query === '') return;\n\n    setMovies(null);\n    setTotalMovies(null);\n    setIsLoading(true);\n\n    getMoviesBySearch(query)\n    .then(data => {\n      setMovies(data.results);\n      setTotalMovies(data.total_results);\n      setIsLoading(false);\n    })\n    .catch(console.log);\n  }, [query]);\n\n  const handleInputChange = evt => {\n    setInputSearch(evt.currentTarget.value);\n  };\n\n  const handleFormSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    const queryNormalized = form.query.value.toLowerCase().trim();\n\n    setSearchParams({ query: queryNormalized });\n    form.reset();\n  };\n  \n  return (\n    <>\n      <form onSubmit={handleFormSubmit} className={css.form}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          className={css.input}\n          onChange={handleInputChange}\n          value={inputSearch}\n        />\n\n        <button type=\"submit\" className={css.submit}>\n          Search\n        </button>\n      </form>\n\n      {isLoading && <Loading />}\n      {movies && <MoviesList movies={movies} />}\n      {totalMovies === 0 && <div className={css.noMovies}>No movies found.</div>}\n    </>\n  )\n}\n\nexport default Movies;"],"names":["trendingMovies","movies","location","useLocation","className","css","map","title","id","to","state","from","useSearchParams","searchParams","setSearchParams","query","get","useState","setMovies","totalMovies","setTotalMovies","isLoading","setIsLoading","inputSearch","setInputSearch","useEffect","getMoviesBySearch","then","data","results","total_results","catch","console","log","onSubmit","evt","preventDefault","form","target","queryNormalized","value","toLowerCase","trim","reset","type","name","onChange","currentTarget","Loading","MoviesList"],"sourceRoot":""}